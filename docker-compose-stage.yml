version: "3.9"

services:
  redis:
    image: "redis"
    container_name: "redis"
    restart: always
    expose: 
      - "6379"
    command: redis-server --save 60 1 --loglevel warning  
    env_file:
      - envs/stage/redis/.env  

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - envs/stage/db/.env
    restart: always
      
  backend:
    build:
      context: .
      dockerfile: dockerfiles/stage/django/Dockerfile
    container_name: backend
    command: sh -c "python3 manage.py check_database && \
                    python3 manage.py makemigrations --noinput && \
                    python3 manage.py migrate --noinput && \
                    python3 manage.py collectstatic --noinput && \
                    gunicorn --bind 0.0.0.0:8000 core.wsgi:application"
    volumes:
      - ./core:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "8000"
    env_file:
      - envs/stage/django/.env
    depends_on:
      - redis
      - db

  worker:
    build: .
    command: celery -A core worker --loglevel=info
    restart: always
    volumes:
      - ./core:/usr/src/app
    depends_on: 
      - redis
      - backend
      - db
    env_file:
      - envs/stage/worker/.env

  beater:
    build: .
    command: celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: always
    volumes:
      - ./core:/usr/src/app
    depends_on: 
      - redis
      - backend
      - db
    env_file:
      - envs/stage/beater/.env
      
  nginx:
    build:
      context: ./dockerfiles/stage/nginx/
    container_name: nginx
    restart: always
    ports: 
      - "80:80"
    volumes:
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend
    env_file:
      - envs/stage/nginx/.env

volumes:
  static_volume:
  media_volume:
  postgres_data: